{"ast":null,"code":"var _jsxFileName = \"/Users/jamescaleca/Desktop/diary-buddy-netlify/src/contexts/userEntryContext.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { useEffect, useState, createContext, useContext } from \"react\";\nimport { useHistory } from \"react-router-dom\";\nimport axios from \"axios\";\nimport Entry from \"../components/Entry\";\nimport \"../styles.css\";\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst EntriesContext = /*#__PURE__*/createContext();\n\nfunction EntriesContextProvider(props) {\n  _s();\n\n  const [entries, setEntries] = useState([]);\n  const [search, setSearch] = useState('');\n  const [searchData, setSearchData] = useState([]);\n\n  const encode = data => {\n    console.log(Object.keys(data));\n    return Object.keys(data).map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key])).join(\"&\");\n  }; // function getEntries() {\n  //     fetch('user-entries')\n  //         .then(res => setEntries(res.data))\n  //         .catch(err => console.log(err))\n  // }\n\n\n  function getEntries() {\n    axios.get(\"/user-entries\").then(res => setEntries(res.data)).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  function getEntryById(entryId) {\n    // fetch(`user-entries/${entryId}`)\n    //     .then(res => setEntries(res.data))\n    //     .catch(err => console.log(err))\n    axios.get(`/user-entries/${entryId}`).then(res => setEntries(res.data)).catch(err => console.log(err.response.data.errMsg));\n  }\n\n  useEffect(() => {\n    getEntries();\n  }, []); // function postEntry(newEntry) {\n  //     fetch('/user-entries', {\n  //         method: 'POST',\n  //         headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n  //         body: encode({'form-name': 'scratch-pad-form', ...newEntry})\n  //     })\n  //         .then(res => {\n  //             setEntries(prevEntries => [...prevEntries, res.data])\n  //         })\n  //         .then(() => alert('Success!'))\n  //         .catch(err => alert(err))\n  // }\n\n  function postEntry(newEntry) {\n    const axiosConfig = {\n      header: {\n        \"Content-Type\": \"application/x-www-form-urlencoded\"\n      }\n    };\n    axios.post(\"/user-entries\", encode({\n      'form-name': 'scratch-pad-form',\n      ...newEntry\n    }), axiosConfig).then(res => {\n      setEntries(prevEntries => [...prevEntries, res.data]);\n    }).catch(err => console.log(err));\n  } // function deleteEntry(entryId) {\n  //     const requestOptions = {\n  //         method: 'DELETE',\n  //         headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n  //     }\n  //     fetch(`/user-entries/${entryId}`, requestOptions)\n  //         .then(res => {\n  //             setEntries(prevEntries => prevEntries.filter(entry => entry.id !== entryId))\n  //             //get request goes here\n  //             fetch('/user-entries')\n  //                 .then(res => setEntries(res.data))\n  //                 .catch(err => console.log(err.response.data.errMsg))\n  //         })\n  //         .catch(err => console.log(err))\n  //         .then(() => alert('Delete successful'))\n  // }\n\n\n  function deleteEntry(entryId) {\n    axios.delete(`/user-entries/${entryId}`).then(res => {\n      setEntries(prevEntries => prevEntries.filter(entry => entry.id !== entryId));\n      axios.get('/entries').then(res => setEntries(res.data));\n    }).catch(err => console.log(err));\n  }\n\n  function editEntry(updates, entryId) {\n    // const requestOptions = {\n    //     method: 'PUT',\n    //     headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n    //     body: updates\n    // }\n    // fetch(`user-entries/${entryId}`, requestOptions)\n    //     .then(res => {\n    //         setEntries(prevEntries => prevEntries.map(entry => entry._id !== entryId ? entry : res.data))\n    //     })\n    //     .catch(err => console.log(err))\n    axios.put(`/user-entries/${entryId}`, updates).then(res => {\n      setEntries(prevEntries => prevEntries.map(entry => entry._id !== entryId ? entry : res.data));\n    }).catch(err => console.log(err));\n  }\n\n  const allEntries = entries.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n    children: /*#__PURE__*/_createElement(Entry, { ...entry,\n      key: entry.title,\n      deleteEntry: deleteEntry,\n      editEntry: editEntry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 13\n      }\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 121,\n    columnNumber: 9\n  }, this)); // For Entry Search\n\n  const filterEntries = e => {\n    // fetch(`/user-entries/search?entry=${search}`)\n    //     .then(res => {\n    //         const searchData = res.data\n    //         setSearchData(searchData)\n    //     })\n    axios.get(`/entries/search?entry=${search}`).then(res => {\n      const searchData = res.data;\n      setSearchData(searchData);\n    });\n  };\n\n  const searchResults = searchData.length > 0 ? searchData.map(entry => /*#__PURE__*/_jsxDEV(\"li\", {\n    className: \"search-entry-li\",\n    children: /*#__PURE__*/_createElement(Entry, { ...entry,\n      key: entry.title,\n      deleteEntry: deleteEntry,\n      editEntry: editEntry,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 17\n      }\n    })\n  }, entry._id, false, {\n    fileName: _jsxFileName,\n    lineNumber: 148,\n    columnNumber: 13\n  }, this)) : /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"h3\", {\n      children: \"No results\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 13\n    }, this)\n  }, void 0, false); // When entries are submitted, the user will go to the \"Your Entries\" tab.\n\n  const history = useHistory();\n\n  function submitBtnRedirect() {\n    history.push('/user-entries');\n  }\n\n  return /*#__PURE__*/_jsxDEV(EntriesContext.Provider, {\n    value: {\n      allEntries,\n      searchResults,\n      search,\n      setSearch,\n      searchData,\n      setSearchData,\n      filterEntries,\n      getEntryById,\n      editEntry,\n      postEntry,\n      deleteEntry,\n      history,\n      submitBtnRedirect\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 9\n  }, this);\n}\n\n_s(EntriesContextProvider, \"xwHyBxvh0aOwjohJ7Ai8WJa2aDA=\", false, function () {\n  return [useHistory];\n});\n\n_c = EntriesContextProvider;\n\nconst useEntries = () => {\n  _s2();\n\n  const context = useContext(EntriesContext);\n  if (!context) throw new Error(\"You must use Provider to consume Context\");\n  return context;\n};\n\n_s2(useEntries, \"b9L3QQ+jgeyIrH0NfHrJ8nn7VMU=\");\n\nexport { EntriesContextProvider, useEntries, EntriesContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"EntriesContextProvider\");","map":{"version":3,"sources":["/Users/jamescaleca/Desktop/diary-buddy-netlify/src/contexts/userEntryContext.js"],"names":["React","useEffect","useState","createContext","useContext","useHistory","axios","Entry","EntriesContext","EntriesContextProvider","props","entries","setEntries","search","setSearch","searchData","setSearchData","encode","data","console","log","Object","keys","map","key","encodeURIComponent","join","getEntries","get","then","res","catch","err","response","errMsg","getEntryById","entryId","postEntry","newEntry","axiosConfig","header","post","prevEntries","deleteEntry","delete","filter","entry","id","editEntry","updates","put","_id","allEntries","title","filterEntries","e","searchResults","length","history","submitBtnRedirect","push","children","useEntries","context","Error"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, createContext, useContext } from \"react\"\nimport {useHistory} from \"react-router-dom\"\nimport axios from \"axios\"\nimport Entry from \"../components/Entry\"\nimport \"../styles.css\"\n\nconst EntriesContext = createContext()\n\nfunction EntriesContextProvider(props) {\n    const [entries, setEntries] = useState([])\n    const [search, setSearch] = useState('')\n    const [searchData, setSearchData] = useState([])\n\n    const encode = (data) => {\n        console.log(Object.keys(data))\n        return Object.keys(data)\n            .map(key => encodeURIComponent(key) + \"=\" + encodeURIComponent(data[key]))\n            .join(\"&\");\n    }\n\n    // function getEntries() {\n    //     fetch('user-entries')\n    //         .then(res => setEntries(res.data))\n    //         .catch(err => console.log(err))\n    // }\n\n    function getEntries() {\n        axios.get(\"/user-entries\")\n        .then(res => setEntries(res.data))\n        .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    function getEntryById(entryId) {\n        // fetch(`user-entries/${entryId}`)\n        //     .then(res => setEntries(res.data))\n        //     .catch(err => console.log(err))\n        axios.get(`/user-entries/${entryId}`)\n            .then(res => setEntries(res.data))\n            .catch(err => console.log(err.response.data.errMsg))\n    }\n\n    useEffect(() => {\n        getEntries()\n    }, [])\n\n    // function postEntry(newEntry) {\n    //     fetch('/user-entries', {\n    //         method: 'POST',\n    //         headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n    //         body: encode({'form-name': 'scratch-pad-form', ...newEntry})\n    //     })\n    //         .then(res => {\n    //             setEntries(prevEntries => [...prevEntries, res.data])\n    //         })\n    //         .then(() => alert('Success!'))\n    //         .catch(err => alert(err))\n    // }\n\n    function postEntry(newEntry) {\n        const axiosConfig = {\n            header: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n        }\n        axios.post(\"/user-entries\", \n            encode({\n                'form-name': 'scratch-pad-form', ...newEntry\n            }),\n            axiosConfig\n        )\n            .then(res => {\n                setEntries(prevEntries => [...prevEntries, res.data])\n            })\n            .catch(err => console.log(err))\n    }\n\n    // function deleteEntry(entryId) {\n    //     const requestOptions = {\n    //         method: 'DELETE',\n    //         headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" }\n    //     }\n    //     fetch(`/user-entries/${entryId}`, requestOptions)\n    //         .then(res => {\n    //             setEntries(prevEntries => prevEntries.filter(entry => entry.id !== entryId))\n    //             //get request goes here\n    //             fetch('/user-entries')\n    //                 .then(res => setEntries(res.data))\n    //                 .catch(err => console.log(err.response.data.errMsg))\n    //         })\n    //         .catch(err => console.log(err))\n    //         .then(() => alert('Delete successful'))\n    // }\n\n    function deleteEntry(entryId) {\n        axios.delete(`/user-entries/${entryId}`)\n            .then(res => {\n                setEntries(prevEntries => prevEntries.filter(entry => entry.id !== entryId))\n                axios.get('/entries')\n                    .then(res => setEntries(res.data))\n            })\n            .catch(err => console.log(err))\n    }\n\n    function editEntry(updates, entryId) {\n        // const requestOptions = {\n        //     method: 'PUT',\n        //     headers: { \"Content-Type\": \"application/x-www-form-urlencoded\" },\n        //     body: updates\n        // }\n        // fetch(`user-entries/${entryId}`, requestOptions)\n        //     .then(res => {\n        //         setEntries(prevEntries => prevEntries.map(entry => entry._id !== entryId ? entry : res.data))\n        //     })\n        //     .catch(err => console.log(err))\n        axios.put(`/user-entries/${entryId}`, updates)\n            .then(res => {\n                setEntries(prevEntries => prevEntries.map(entry => entry._id !== entryId ? entry : res.data))\n            })\n            .catch(err => console.log(err))\n    }\n\n    const allEntries = entries.map(entry => \n        <li>\n            <Entry \n                {...entry} \n                key={entry.title}\n                deleteEntry={deleteEntry}\n                editEntry={editEntry}\n            />\n        </li>\n    )\n\n    // For Entry Search\n    const filterEntries = (e) => {\n        // fetch(`/user-entries/search?entry=${search}`)\n        //     .then(res => {\n        //         const searchData = res.data\n        //         setSearchData(searchData)\n        //     })\n        axios\n            .get(`/entries/search?entry=${search}`)\n            .then(res => {\n                const searchData = res.data\n                setSearchData(searchData)\n            })\n    }\n\n    const searchResults = searchData.length > 0 ? \n        searchData.map(entry => (\n            <li className='search-entry-li' key={entry._id}>\n                <Entry\n                    {...entry}\n                    key={entry.title}\n                    deleteEntry={deleteEntry}\n                    editEntry={editEntry}\n                />\n            </li>\n        ))\n    :\n        <>\n            <h3>No results</h3>\n        </>\n\n    // When entries are submitted, the user will go to the \"Your Entries\" tab.\n    const history = useHistory()\n\n    function submitBtnRedirect() {\n        history.push('/user-entries')\n    }\n\n    return (\n        <EntriesContext.Provider value={{\n            allEntries,\n            searchResults,\n            search,\n            setSearch,\n            searchData,\n            setSearchData,\n            filterEntries,\n            getEntryById,\n            editEntry,\n            postEntry,\n            deleteEntry,\n            history,\n            submitBtnRedirect,\n        }}>{props.children}\n        </EntriesContext.Provider>\n    )\n}\n\nconst useEntries = () => {\n    const context = useContext(EntriesContext)\n    if (!context) throw new Error(\"You must use Provider to consume Context\");\n    return context\n}\n\nexport { EntriesContextProvider, useEntries, EntriesContext }"]},"metadata":{},"sourceType":"module"}