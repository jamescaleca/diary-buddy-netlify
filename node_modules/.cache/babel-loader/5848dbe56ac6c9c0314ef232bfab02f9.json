{"ast":null,"code":"var _jsxFileName = \"/Users/jamescaleca/Desktop/diary-buddy-netlify/src/contexts/templateContext.js\",\n    _s = $RefreshSig$();\n\nimport React, { createContext } from \"react\";\nimport affirmations from \"../components/affirmationData.js\";\nimport journalPromptsOne from \"../components/promptsDataOne.js\";\nimport journalPromptsTwo from \"../components/promptsDataTwo.js\";\nimport journalPromptsThree from \"../components/promptsDataThree.js\";\nimport { useEntries } from \"../contexts/userEntryContext.js\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TemplateContext = /*#__PURE__*/createContext();\n\nfunction TemplateContextProvider(props) {\n  _s();\n\n  const {\n    history\n  } = useEntries();\n  const dateForToday = new Date();\n  const dayOfMonth = dateForToday.getDate();\n\n  function goBack() {\n    history.goBack();\n  }\n\n  function dailyAffirmation() {\n    // new Date() is a date constructor that gives you the month, day, year, hours, seconds, and milliseconds\n    // The getDate() method returns the day of the month for the specified date according to local time.\n    return affirmations.map(message => message.date === dayOfMonth ? message.affirmation : null);\n  }\n\n  function dailyPromptOne() {\n    return journalPromptsOne.map(journalOne => journalOne.date === dayOfMonth ? journalOne.prompts : null);\n  }\n\n  function dailyPromptTwo() {\n    return journalPromptsTwo.map(journalTwo => journalTwo.date === dayOfMonth ? journalTwo.prompts : null);\n  }\n\n  function dailyPromptThree() {\n    return journalPromptsThree.map(journalThree => journalThree.date === dayOfMonth ? journalThree.prompts : null);\n  }\n\n  return /*#__PURE__*/_jsxDEV(TemplateContext.Provider, {\n    value: {\n      // handleSubmit,\n      // handleChange,\n      // promptInputs,\n      goBack,\n      dailyAffirmation,\n      dailyPromptOne,\n      dailyPromptTwo,\n      dailyPromptThree\n    },\n    children: props.children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 46,\n    columnNumber: 9\n  }, this);\n}\n\n_s(TemplateContextProvider, \"xV1NN2u9L0eStbvcgpRF2ixhfSk=\", false, function () {\n  return [useEntries];\n});\n\n_c = TemplateContextProvider;\nexport { TemplateContextProvider, TemplateContext };\n\nvar _c;\n\n$RefreshReg$(_c, \"TemplateContextProvider\");","map":{"version":3,"sources":["/Users/jamescaleca/Desktop/diary-buddy-netlify/src/contexts/templateContext.js"],"names":["React","createContext","affirmations","journalPromptsOne","journalPromptsTwo","journalPromptsThree","useEntries","TemplateContext","TemplateContextProvider","props","history","dateForToday","Date","dayOfMonth","getDate","goBack","dailyAffirmation","map","message","date","affirmation","dailyPromptOne","journalOne","prompts","dailyPromptTwo","journalTwo","dailyPromptThree","journalThree","children"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,aAAf,QAAmC,OAAnC;AACA,OAAOC,YAAP,MAAyB,kCAAzB;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,iBAAP,MAA8B,iCAA9B;AACA,OAAOC,mBAAP,MAAgC,mCAAhC;AACA,SAASC,UAAT,QAA2B,iCAA3B;;AAEA,MAAMC,eAAe,gBAAGN,aAAa,EAArC;;AAGA,SAASO,uBAAT,CAAiCC,KAAjC,EAAwC;AAAA;;AACpC,QAAM;AAACC,IAAAA;AAAD,MAAYJ,UAAU,EAA5B;AACA,QAAMK,YAAY,GAAG,IAAIC,IAAJ,EAArB;AACA,QAAMC,UAAU,GAAGF,YAAY,CAACG,OAAb,EAAnB;;AAEA,WAASC,MAAT,GAAkB;AACdL,IAAAA,OAAO,CAACK,MAAR;AACH;;AAED,WAASC,gBAAT,GAA4B;AACxB;AACA;AACA,WAAOd,YAAY,CAACe,GAAb,CAAiBC,OAAO,IAC3BA,OAAO,CAACC,IAAR,KAAiBN,UAAjB,GAA8BK,OAAO,CAACE,WAAtC,GAAoD,IADjD,CAAP;AAGH;;AAED,WAASC,cAAT,GAA0B;AACtB,WAAOlB,iBAAiB,CAACc,GAAlB,CAAsBK,UAAU,IACnCA,UAAU,CAACH,IAAX,KAAoBN,UAApB,GAAiCS,UAAU,CAACC,OAA5C,GAAsD,IADnD,CAAP;AAGH;;AACD,WAASC,cAAT,GAA0B;AACtB,WAAOpB,iBAAiB,CAACa,GAAlB,CAAsBQ,UAAU,IACnCA,UAAU,CAACN,IAAX,KAAoBN,UAApB,GAAiCY,UAAU,CAACF,OAA5C,GAAsD,IADnD,CAAP;AAGH;;AACD,WAASG,gBAAT,GAA4B;AACxB,WAAOrB,mBAAmB,CAACY,GAApB,CAAwBU,YAAY,IACvCA,YAAY,CAACR,IAAb,KAAsBN,UAAtB,GAAmCc,YAAY,CAACJ,OAAhD,GAA0D,IADvD,CAAP;AAGH;;AAED,sBAEI,QAAC,eAAD,CAAiB,QAAjB;AAA0B,IAAA,KAAK,EAAE;AAC7B;AACA;AACA;AACAR,MAAAA,MAJ6B;AAK7BC,MAAAA,gBAL6B;AAM7BK,MAAAA,cAN6B;AAO7BG,MAAAA,cAP6B;AAQ7BE,MAAAA;AAR6B,KAAjC;AAAA,cAUIjB,KAAK,CAACmB;AAVV;AAAA;AAAA;AAAA;AAAA,UAFJ;AAgBH;;GAjDQpB,uB;UACaF,U;;;KADbE,uB;AAmDT,SAAQA,uBAAR,EAAiCD,eAAjC","sourcesContent":["import React, {createContext} from \"react\"\nimport affirmations from \"../components/affirmationData.js\"\nimport journalPromptsOne from \"../components/promptsDataOne.js\"\nimport journalPromptsTwo from \"../components/promptsDataTwo.js\"\nimport journalPromptsThree from \"../components/promptsDataThree.js\"\nimport { useEntries } from \"../contexts/userEntryContext.js\"\n\nconst TemplateContext = createContext()\n\n\nfunction TemplateContextProvider(props) {\n    const {history} = useEntries()\n    const dateForToday = new Date();\n    const dayOfMonth = dateForToday.getDate();\n\n    function goBack() {\n        history.goBack()\n    }\n\n    function dailyAffirmation() {\n        // new Date() is a date constructor that gives you the month, day, year, hours, seconds, and milliseconds\n        // The getDate() method returns the day of the month for the specified date according to local time.\n        return affirmations.map(message => \n            message.date === dayOfMonth ? message.affirmation : null \n        )\n    }\n\n    function dailyPromptOne() {\n        return journalPromptsOne.map(journalOne => \n            journalOne.date === dayOfMonth ? journalOne.prompts : null \n        )\n    }\n    function dailyPromptTwo() {\n        return journalPromptsTwo.map(journalTwo => \n            journalTwo.date === dayOfMonth ? journalTwo.prompts : null \n        )\n    }\n    function dailyPromptThree() {\n        return journalPromptsThree.map(journalThree => \n            journalThree.date === dayOfMonth ? journalThree.prompts : null \n        )\n    }\n    \n    return (\n\n        <TemplateContext.Provider value={{\n            // handleSubmit,\n            // handleChange,\n            // promptInputs,\n            goBack,\n            dailyAffirmation,\n            dailyPromptOne,\n            dailyPromptTwo,\n            dailyPromptThree\n        \n        }}>{props.children}\n        </TemplateContext.Provider>\n        \n    )\n}\n\nexport {TemplateContextProvider, TemplateContext}"]},"metadata":{},"sourceType":"module"}